{"data": {"attributes": {"type_description": "Win32 EXE", "tlsh": "T1C332E809BB849F69D13D95B4BCF2811881B7930F1222DE4B1EC751CE6A637C5B503BD8", "vhash": "214026551e1z11a0025", "type_tags": ["executable", "windows", "win32", "pe", "peexe"], "crowdsourced_yara_results": [{"description": "Detects executables containing base64 encoded User Agent", "source": "https://github.com/ditekshen/detection", "author": "ditekSHen", "ruleset_name": "indicator_suspicious", "rule_name": "INDICATOR_SUSPICIOUS_EXE_B64_Encoded_UserAgent", "ruleset_id": "00c3b8eb5d"}, {"description": "Detects Covenant Grunt Stager", "source": "https://github.com/ditekshen/detection", "author": "ditekSHen", "ruleset_name": "malware", "rule_name": "MALWARE_Win_CovenantGruntStager", "ruleset_id": "00cc803bdc"}], "creation_date": 1655974857, "names": ["download.dat", "test.exe", "evol.txt", "extracted.dll", "download.bin", "winpe.exe", "download.exe", "inflated.exe", "myfile.dat", "5mqms3q1.zci.exe", "out2.htb", "perseverance.exe", "bin2.exe", "gah.bad", "7Vp.exe", "bin2"], "last_modification_date": 1676939771, "type_tag": "peexe", "times_submitted": 23, "total_votes": {"harmless": 0, "malicious": 0}, "size": 11776, "popular_threat_classification": {"suggested_threat_label": "trojan.msil/covenant", "popular_threat_category": [{"count": 19, "value": "trojan"}, {"count": 3, "value": "dropper"}], "popular_threat_name": [{"count": 20, "value": "msil"}, {"count": 7, "value": "covenant"}, {"count": 7, "value": "marte"}]}, "authentihash": "c5feb13467814539277ec1399fc91e0f09a33c69f75720947649fc6a6f3b5cd0", "detectiteasy": {"filetype": "PE32", "values": [{"version": "v4.0.30319", "type": "Library", "name": ".NET"}, {"info": "GUI32", "version": "48.0", "type": "Linker", "name": "Microsoft Linker"}]}, "last_submission_date": 1664314230, "sigma_analysis_results": [{"rule_title": "Disable Microsoft Defender Firewall via Registry", "rule_source": "Sigma Integrated Rule Set (GitHub)", "match_context": [{"values": {"EventID": "13", "ProcessId": "404", "EventType": "SetValue", "Image": "C:\\Windows\\system32\\svchost.exe", "ProcessGuid": "C784477D-E66A-629D-1400-000000004700", "UtcTime": "2022-06-06 11:41:13.903", "Details": "DWORD (0x00000000)", "RuleName": "T1089", "TargetObject": "HKLM\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\DomainProfile\\EnableFirewall"}}, {"values": {"EventID": "13", "ProcessId": "404", "EventType": "SetValue", "Image": "C:\\Windows\\system32\\svchost.exe", "ProcessGuid": "C784477D-E66A-629D-1400-000000004700", "UtcTime": "2022-06-06 11:41:13.903", "Details": "DWORD (0x00000000)", "RuleName": "T1089", "TargetObject": "HKLM\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile\\EnableFirewall"}}, {"values": {"EventID": "13", "ProcessId": "404", "EventType": "SetValue", "Image": "C:\\Windows\\system32\\svchost.exe", "RuleName": "T1089", "UtcTime": "2022-06-06 11:41:13.903", "Details": "DWORD (0x00000000)", "ProcessGuid": "C784477D-E66A-629D-1400-000000004700", "TargetObject": "HKLM\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\PublicProfile\\EnableFirewall"}}], "rule_level": "medium", "rule_description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage", "rule_author": "frack113", "rule_id": "4d91cff1255532aacd25d7b82261d545afc7d30837d1643a0dd2c4617aec5865"}, {"rule_title": "Failed Code Integrity Checks", "rule_source": "Sigma Integrated Rule Set (GitHub)", "match_context": [{"values": {"EventID": "5038", "param1": "\\Device\\HarddiskVolume4\\Program Files (x86)\\sandbox\\driver\\sandbox-driver.sys"}}], "rule_level": "low", "rule_description": "Code integrity failures may indicate tampered executables.", "rule_author": "Thomas Patzke", "rule_id": "134564d292d785dff102940b8a1ee06dba2d462c5fb852124b3771a49d7885f1"}, {"rule_title": "Use Remove-Item to Delete File", "rule_source": "Sigma Integrated Rule Set (GitHub)", "match_context": [{"values": {"EventID": "4104", "ScriptBlockText": "eon')\r\n\t\t{\r\n\t\t\t$value = $pr.Value.replace(\"Xeon\", \"Core\")\r\n\t\t\t$args.add($pr.Name, $pr.Value)\r\n\t\t\t\r\n\t\t} elseif($pr.Name -eq \"NumberOfCores\" -and $pr.Value -lt 4)\r\n\t\t{\r\n\t\t\t$args.add($pr.Name, 4)\r\n\t\t} else\r\n\t\t{\r\n\t\t\t$args.add($pr.Name, $pr.Value)\r\n\t\t}\r\n\t}\r\n\tSet-WmiInstance -Path \\\\.\\root\\cimv2:Win32_Processor -Arguments $args\r\n}\r\n\r\n#Joebox\r\n\r\n#Creating Win32_ComputerSystem fake class\r\n$newClass = New-Object System.Management.ManagementClass(\"root\\cimv2\", [String]::Empty, $null); \r\n$newClass[\"__CLASS\"] = \"Win32_ComputerSystem\";\r\n$newClass.Qualifiers.Add(\"Static\", $true)\r\n\r\n$objWMi = get-wmiobject -computername localhost -Namespace root\\CIMV2 -Query \"Select * from Win32_ComputerSystem\"\r\n\r\nforeach ($obj in $objWmi)\r\n{\r\n\tforeach ($pr in $obj.Properties)\r\n\t{\r\n\t\tif($pr.Name -eq \"Manufacturer\")\r\n\t\t{\r\n\t\t\t$value = Get-RandomCharacters -length 15 -characters 'ABCDEFGHKLMNOPRSTUVWXYZabcdefghklmnoprstuvwxyz123456789 '\r\n\r\n\t\t\t$newClass.Properties.Add($pr.Name, $value, $pr.Type)\r\n\t\t\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"Key\", $true)\r\n\t\t} elseif($pr.Name -eq \"Model\")\r\n\t\t{\r\n\t\t\t$value = Get-RandomCharacters -length 8 -characters 'ABCDEFGHKLMNOPRSTUVWXYZabcdefghklmnoprstuvwxyz123456789 '\r\n\t\t\t$newClass.Properties.Add($pr.Name, $value, $pr.Type)\r\n\t\t} elseif($pr.Name -eq \"Domain\")\r\n\t\t{\r\n\t\t\t$value = Get-RandomCharacters -length 5 -characters 'ABCDEFGHKLMNOPRSTUVWXYZabcdefghklmnoprstuvwxyz123456789'\r\n\t\t\t$newClass.Properties.Add($pr.Name, $value, $pr.Type)\r\n\t\t} elseif($pr.Name -eq \"OEMStringArray\")\r\n\t\t{\r\n\t\t\t$value = Get-RandomCharacters -length 10 -characters 'ABCDEFGHKLMNOPRSTUVWXYZabcdefghklmnoprstuvwxyz123456789'\r\n\t\t\t$newClass.Properties.Add($pr.Name, @($value), $pr.Type)\r\n\t\t} else\r\n\t\t{\r\n\t\t\t$newClass.Properties.Add($pr.Name, $pr.Value, $pr.Type)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n$newClass.Put()\r\nSet-WmiInstance -Path \\\\.\\root\\cimv2:Win32_ComputerSystem \r\n\r\n#Joebox\r\n\r\n#Creating Win32_PnPEntity fake class\r\n$newClass = New-Object System.Management.ManagementClass(\"root\\cimv2\", [String]::Empty, $null); \r\n$newClass[\"__CLASS\"] = \"Win32_PnPEntity\";\r\n$newClass.Qualifiers.Add(\"Static\", $true);\r\n\r\n$objWMi = get-wmiobject -computername localhost -Namespace root\\CIMV2 -Query \"Select * from Win32_PnPEntity\"\r\n\r\nforeach ($pr in $objWmi[0].Properties)\r\n{\r\n\t$newClass.Properties.Add($pr.Name, $pr.Type, $false)\t\r\n\tif($pr.Name -eq \"DeviceID\")\r\n\t{\r\n\t\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"Key\", $true)\r\n\t}\r\n\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"read\", $true)\r\n}\r\n\r\n$newClass.Put()\r\n\r\nforeach ($obj in $objWmi)\r\n{\t\r\n\t$args = @{}\r\n\tforeach ($pr in $obj.Properties)\r\n\t{\t\r\n\t\tif(($pr.Name -eq \"DeviceId\" -or $pr.Name -eq \"Caption\" -or $pr.Name -eq \"Name\" -or $pr.Name -eq \"PNPDeviceID\"  -or $pr.Name -eq \"Service\") -and ($pr.Value -match 'VEN_80EE' -or $pr.Value -match 'VEN_15AD' -or $pr.Value -match 'VBOX' -or $pr.Value -match 'VBox' -or $pr.Value -match 'VMWARE' -or $pr.Value -match '82801FB' -or $pr.Value -match '82441FX' -or $pr.Value -match '82371SB' -or $pr.Value -match 'OpenHCD'))\r\n\t\t{\r\n\t\t\t$value = Get-RandomCharacters -length 8 -characters 'ABCDEFGHKLMNOPRSTUVWXYZ123456789_'\r\n\t\t\t$value = $pr.Value.replace(\"VEN_80EE\", $value).replace(\"VEN_15AD\", $value).replace(\"VBOX\", $value).replace(\"VBox\", $value).replace(\"VMWARE\", $value).replace(\"82801FB\", $value).replace(\"82441FX\", $value).replace(\"82371SB\", $value).replace(\"OpenHCD\", $value)\r\n\t\t\t\r\n\t\t\t# 82801FB 82441FX 82371SB OpenHCD\r\n\t\t\t\t\r\n\t\t\t$args.add($pr.Name, $value)\r\n\t\t\t\r\n\t\t} else\r\n\t\t{\r\n\t\t\t$args.add($pr.Name, $pr.Value)\r\n\t\t}\r\n\t}\r\n\t\r\n\tSet-WmiInstance -Path \\\\.\\root\\cimv2:Win32_PnPEntity -Arguments $args\r\n}\r\n\r\n#Joebox\r\n\r\n#Creating Win32_DiskDrive fake class\r\n$newClass = New-Object System.Management.ManagementClass(\"root\\cimv2\", [String]::Empty, $null); \r\n$newClass[\"__CLASS\"] = \"Win32_DiskDrive\";\r\n$newClass.Qualifiers.Add(\"Static\", $true);\r\n\r\n$objWMi = get-wmiobject -computername localhost -Namespace root\\CIMV2 -Query \"Select * from Win32_DiskDrive\"\r\n\r\nif(-Not ($objWMi -is [array]))\r\n{\r\n\t$objWMi = @($objWMi)\r\n}\r\n\r\nforeach ($pr in $objWmi[0].Properties)\r\n{\r\n\t$newClass.Properties.Add($pr.Name, $pr.Type, $false)\t\r\n\tif($pr.Name -eq \"DeviceID\")\r\n\t{\r\n\t\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"Key\", $true)\r\n\t}\r\n\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"read\", $true)\r\n}\r\n\r\n$newClass.Put()\r\n\r\nforeach ($obj in $objWmi)\r\n{\t\r\n\t$args = @{}\r\n\tforeach ($pr in $obj.Properties)\r\n\t{\t\r\n\t\tif(($pr.Name -eq \"DeviceId\" -or $pr.Name -eq \"Caption\" -or $pr.Name -eq \"Model\" -or $pr.Name -eq \"PNPDeviceID\") -and ($pr.Value -match 'VBOX' -or $pr.Value -match 'VBox' -or $pr.Value -match 'VMWARE' -or $pr.Value -match 'VMware'))\r\n\t\t{\r\n\t\t\t$value = Get-RandomCharacters -length 8 -characters 'ABCDEFGHKLMNOPRSTUVWXYZ123456789_'\r\n\t\t\t$value = $pr.Value.replace(\"VBOX\", $value).replace(\"VBox\", $value).replace(\"VMWARE\", $value).replace(\"VMware Virtual disk\", $value).replace(\"VMware\", $value).replace(\"HARDDISK\", \"WDC\").replace(\"VIRTUAL_DISK\", $value)\r\n\t\t\t\t\r\n\t\t\t$args.add($pr.Name, $value)\r\n\t\t\r\n\t\t# Change disk size\r\n\t\t} elseif($pr.Name -eq \"Size\" -and $pr.Value -lt 200000000000)\r\n\t\t{\r\n\t\t\t$args.add($pr.Name, 412300001200)\r\n\t\t} elseif(-Not($pr.Name -eq \"Capabilities\"))\r\n\t\t{\r\n\t\t\t$args.add($pr.Name, $pr.Value)\r\n\t\t}\r\n\t}\r\n\t\r\n\tSet-WmiInstance -Path \\\\.\\root\\cimv2:Win32_DiskDrive -Arguments $args\r\n}\r\n\r\n#Joebox\r\n\r\n#Creating Win32_VideoController fake class\r\n$newClass = New-Object System.Management.ManagementClass(\"root\\cimv2\", [String]::Empty, $null); \r\n$newClass[\"__CLASS\"] = \"Win32_VideoController\";\r\n$newClass.Qualifiers.Add(\"Static\", $true);\r\n\r\n$objWMi = get-wmiobject -computername localhost -Namespace root\\CIMV2 -Query \"Select * from Win32_VideoController\"\r\n\r\nif(-Not ($objWMi -is [array]))\r\n{\r\n\t$objWMi = @($objWMi)\r\n}\r\n\r\nforeach ($pr in $objWmi[0].Properties)\r\n{\r\n\t$newClass.Properties.Add($pr.Name, $pr.Type, $false)\t\r\n\tif($pr.Name -eq \"DeviceID\")\r\n\t{\r\n\t\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"Key\", $true)\r\n\t}\r\n\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"read\", $true)\r\n}\r\n\r\n$newClass.Put()\r\n\r\nforeach ($obj in $objWmi)\r\n{\t\r\n\t$args = @{}\r\n\tforeach ($pr in $obj.Properties)\r\n\t{\t\r\n\t\tif(($pr.Name -eq \"Caption\" -or $pr.Name -eq \"Name\" -or $pr.Name -eq \"PNPDeviceID\" -or $pr.Name -eq \"AdapterCompatibility\" -or $pr.Name -eq \"Description\" -or $pr.Name -eq \"InfSection\" -or $pr.Name -eq \"VideoProcessor\") -and ($pr.Value -match 'VBOX' -or $pr.Value -match 'VBox' -or $pr.Value -match 'VMWARE' -or $pr.Value -match 'VirtualBox' -or $pr.Value -match 'VMware' -or $pr.Value -match 'Oracle Corporation' -or $pr.Value -match 'Microsoft Basic Display Adapter'))\r\n\t\t{\r\n\t\t\t$value = Get-RandomCharacters -length 8 -characters 'ABCDEFGHKLMNOPRSTUVWXYZ123456789_'\r\n\t\t\t$value = $pr.Value.replace(\"VBOX\", $value).replace(\"VBox\", $value).replace(\"VMWARE\", $value).replace(\"VMware\", $value).replace(\"VirtualBox\", $value).replace(\"Oracle Corporation\", $value).replace(\"Microsoft Basic Display Adapter\", $value)\r\n\t\t\t\t\r\n\t\t\t$args.add($pr.Name, $value)\r\n\t\t\r\n\r\n\t\t} elseif($pr.Name -eq \"DriverVersion\")\r\n\t\t{\r\n\t\t\t$value = Get-RandomCharacters -length 8 -characters '1234567890.'\r\n\t\t\t$args.add($pr.Name, $value)\r\n\t\t} elseif($pr.Name -eq \"AdapterRAM\" -and $pr.Value -lt 1000000000)\r\n\t\t{\r\n\t\t\t$args.add($pr.Name, 1073741824)\r\n\t\t} else\r\n\t\t{\r\n\t\t\t$args.add($pr.Name, $pr.Value)\r\n\t\t}\r\n\t}\r\n\t\r\n\tSet-WmiInstance -Path \\\\.\\root\\cimv2:Win32_VideoController -Arguments $args\r\n}\r\n\r\n#Joebox\r\n\r\n#Creating Win32_BaseBoard fake class\r\n$newClass = New-Object System.Management.ManagementClass(\"root\\cimv2\", [String]::Empty, $null); \r\n$newClass[\"__CLASS\"] = \"Win32_BaseBoard\";\r\n$newClass.Qualifiers.Add(\"Static\", $true)\r\n\r\n$objWMi = get-wmiobject -computername localhost -Namespace root\\CIMV2 -Query \"Select * from Win32_BaseBoard\"\r\n\r\nforeach ($obj in $objWmi)\r\n{\r\n\tforeach ($pr in $obj.Properties)\r\n\t{\r\n\t\tif($pr.Name -eq \"Name\")\r\n\t\t{\t$value = Get-RandomCharacters -length 10 -characters 'ABCDEFGHKLMNOPRSTUVWXYZ123456789'\r\n\r\n\t\t\t$newClass.Properties.Add($pr.Name, $value, $pr.Type)\r\n\t\t\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"Key\", $true)\r\n\t\t} elseif($pr.Name -eq \"Product\" -or $pr.Name -eq \"Manufacturer\")\r\n\t\t{\r\n\t\t\t$value = Get-RandomCharacters -length 10 -characters 'ABCDEFGHKLMNOPRSTUVWXYZ123456789'\r\n\t\t\t$newClass.Properties.Add($pr.Name, $value, $pr.Type)\r\n\t\t} else\r\n\t\t{\r\n\t\t\t$newClass.Properties.Add($pr.Name, $pr.Value, $pr.Type)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n$newClass.Put()\r\nSet-WmiInstance -Path \\\\.\\root\\cimv2:Win32_BaseBoard\r\n\r\n\r\n#Creating Win32_ComputerSystemProduct fake class\r\n$newClass = New-Object System.Management.ManagementClass(\"root\\cimv2\", [String]::Empty, $null); \r\n$newClass[\"__CLASS\"] = \"Win32_ComputerSystemProduct\";\r\n$newClass.Qualifiers.Add(\"Static\", $true)\r\n\r\n$objWMi = get-wmiobject -computername localhost -Namespace root\\CIMV2 -Query \"Select * from Win32_ComputerSystemProduct\"\r\n\r\nforeach ($obj in $objWmi)\r\n{\r\n\tforeach ($pr in $obj.Properties)\r\n\t{\r\n\t\tif($pr.Name -eq \"Name\")\r\n\t\t{\t\r\n\t\t\t$newClass.Properties.Add($pr.Name, $pr.$value, $pr.Type)\r\n\t\t\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"Key\", $true)\r\n\t\t} elseif($pr.Name -eq \"IdentifyingNumber\")\r\n\t\t{\r\n\t\t\t$value = Get-RandomCharacters -length 6 -characters 'ABCDEFGHKLMNOPRSTUVWXYZ123456789'\r\n\t\t\t$newClass.Properties.Add($pr.Name, $value, $pr.Type)\r\n\t\t} else\r\n\t\t{\r\n\t\t\t$newClass.Properties.Add($pr.Name, $pr.Value, $pr.Type)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n$newClass.Put()\r\nSet-WmiInstance -Path \\\\.\\root\\cimv2:Win32_ComputerSystemProduct\r\n\r\n\r\n\r\n#Creating Win32_LogicalDisk fake class\r\n$newClass = New-Object System.Management.ManagementClass(\"root\\cimv2\", [String]::Empty, $null); \r\n$newClass[\"__CLASS\"] = \"Win32_LogicalDisk\";\r\n$newClass.Qualifiers.Add(\"Static\", $true);\r\n\r\n$objWMi = get-wmiobject -computername localhost -Namespace root\\CIMV2 -Query \"Select * from Win32_LogicalDisk WHERE DriveType = 3\"\r\n\r\nif(-Not ($objWMi -is [array]))\r\n{\r\n\t$objWMi = @($objWMi)\r\n}\r\n\r\nforeach ($pr in $objWmi[0].Properties)\r\n{\r\n\t$newClass.Properties.Add($pr.Name, $pr.Type, $false)\t\r\n\tif($pr.Name -eq \"DeviceID\")\r\n\t{\r\n\t\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"Key\", $true)\r\n\t}\r\n\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"read\", $true)\r\n}\r\n\r\n$newClass.Put()\r\n\r\nforeach ($obj in $objWmi)\r\n{\t\r\n\t$args = @{}\r\n\tforeach ($pr in $obj.Properties)\r\n\t{\t\r\n\t\tif($pr.Name -eq \"Size\")\r\n\t\t{\r\n\t\t\t$args.add($pr.Name, \"223496729601\")\r\n\t\t} else\r\n\t\t{\r\n\t\t\t$args.add($pr.Name, $pr.Value)\r\n\t\t}\r\n\t}\r\n\t\r\n\tSet-WmiInstance -Path \\\\.\\root\\cimv2:Win32_LogicalDisk -Arguments $args\r\n}\r\n\r\n\r\n#Creating Win32_ComputerSystemProduct fake class\r\n$newClass = New-Object System.Management.ManagementClass(\"root\\cimv2\", [String]::Empty, $null); \r\n$newClass[\"__CLASS\"] = \"Win32_OperatingSystem\";\r\n$newClass.Qualifiers.Add(\"Static\", $true)\r\n\r\n$objWMi = get-wmiobject -computername localhost -Namespace root\\CIMV2 -Query \"Select * from Win32_OperatingSystem\"\r\n\r\n\r\nforeach ($obj in $objWmi)\r\n{\r\n\tforeach ($pr in $obj.Properties)\r\n\t{\r\n\t\tif($pr.Name -eq \"CreationClassName\")\r\n\t\t{\t\r\n\t\t\t$newClass.Properties.Add($pr.Name, $pr.$value, $pr.Type)\r\n\t\t\t$newClass.Properties[$pr.Name].Qualifiers.Add(\"Key\", $true)\r\n\t\t} elseif($pr.Name -eq \"LastBootUpTime\")\r\n\t\t{\r\n\t\t\t$d = [System.Management.ManagementDateTimeConverter]::ToDateTime($pr.Value)\r\n\t\t\t$d = $d.addDays(-10)\r\n\t\t\t$d = [System.Management.ManagementDateTimeConverter]::ToDmtfDateTime($d)\r\n\t\t\t\r\n\t\t\t$newClass.Properties.Add($pr.Name, $d, $pr.Type)\r\n\t\t\t\r\n\t\t} else\r\n\t\t{\r\n\t\t\t$newClass.Properties.Add($pr.Name, $pr.Value, $pr.Type)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n$newClass.Put()\r\nSet-WmiInstance -Path \\\\.\\root\\cimv2:Win32_OperatingSystem\r\n\r\n\r\nfunction Delete() {\r\n    $Invocation = (Get-Variable MyInvocation -Scope 1).Value\r\n    $Path =  $Invocation.MyCommand.Path \r\n    Write-Host $Path\r\n    Remove-Item $Path -force\r\n} \r\n     \r\nDelete \r\n", "ScriptBlockId": "6e1904ba-e040-46ec-907b-c0a44772682d", "MessageNumber": "\u0002", "MessageTotal": "\u0002", "Path": "C:\\Program Files (x86)\\Joebox\\unpack\\wmievasions.ps1"}}], "rule_level": "low", "rule_description": "Powershell Remove-Item  with -Path to delete a file or a folder with \"-Recurse\"", "rule_author": "frack113", "rule_id": "d9b2eb00753c3049fbb4ed4f7d88f29b65a0c50bec45ff4723b95bb637f8f83d"}], "meaningful_name": "download.dat", "trid": [{"file_type": "Generic CIL Executable (.NET, Mono, etc.)", "probability": 71.1}, {"file_type": "Win64 Executable (generic)", "probability": 10.2}, {"file_type": "Win32 Dynamic Link Library (generic)", "probability": 6.3}, {"file_type": "Win32 Executable (generic)", "probability": 4.3}, {"file_type": "Windows Icons Library (generic)", "probability": 2.0}], "sigma_analysis_summary": {"Sigma Integrated Rule Set (GitHub)": {"high": 0, "medium": 1, "critical": 0, "low": 2}}, "sandbox_verdicts": {"C2AE": {"category": "malicious", "confidence": 80, "sandbox_name": "C2AE", "malware_classification": ["MALWARE"], "malware_names": ["GruntStager"]}}, "sha256": "2e797717d21635a162653dbd6cabfcf52bd771c9fa14f93b38d088bc82df83ec", "type_extension": "exe", "tags": ["peexe", "runtime-modules", "assembly", "direct-cpu-clock-access", "detect-debug-environment"], "last_analysis_date": 1676932512, "unique_sources": 23, "first_submission_date": 1657897755, "sha1": "c933c47f53db4e61f0d5e054ebcd4113c5c65cdc", "ssdeep": "192:XMmHXSiVcT36H3MeH3YCjgTFem2Quuk0XavbYHYs2Z0Lr/EWias4SF/cXwjomj:8mHXSiVcTqHceHSFV2QugXavbiD2OHiL", "packers": {"PEiD": ".NET executable"}, "md5": "b7280ebebc3bd412240d5867b2dbe883", "dot_net_assembly": {"entry_point_rva": 0, "metadata_header_rva": 11720, "assembly_name": "5mqms3q1.zci.exe", "assembly_flags": 1, "strongname_va": 0, "tables_rows_map_log": "48567686544454554", "external_assemblies": {"mscorlib": {"version": "4.0.0.0"}, "System": {"version": "4.0.0.0"}, "System.Core": {"version": "4.0.0.0"}}, "type_definition_list": [{"type_definitions": ["Assembly", "MethodInfo", "MethodBase"], "namespace": "System.Reflection"}, {"type_definitions": ["DebuggableAttribute"], "namespace": "System.Diagnostics"}, {"type_definitions": ["StringBuilder", "Encoding"], "namespace": "System.Text"}, {"type_definitions": ["Enumerable"], "namespace": "System.Linq"}, {"type_definitions": ["Match", "Regex", "GroupCollection", "Group", "Capture"], "namespace": "System.Text.RegularExpressions"}, {"type_definitions": ["Object", "STAThreadAttribute", "Random", "Guid", "Exception", "Uri", "Func`2", "Char", "String", "Environment", "Boolean", "Convert", "IDisposable", "Byte", "Buffer", "Array", "Type", "Console"], "namespace": "System"}, {"type_definitions": ["X509Certificate", "X509Chain"], "namespace": "System.Security.Cryptography.X509Certificates"}, {"type_definitions": ["CompilationRelaxationsAttribute", "RuntimeCompatibilityAttribute", "CompilerGeneratedAttribute"], "namespace": "System.Runtime.CompilerServices"}, {"type_definitions": ["DebuggingModes", "Enumerator"], "namespace": "uncategorized"}, {"type_definitions": ["List`1", "IEnumerable`1"], "namespace": "System.Collections.Generic"}, {"type_definitions": ["NameValueCollection"], "namespace": "System.Collections.Specialized"}, {"type_definitions": ["WebClient", "CookieContainer", "WebRequest", "HttpWebRequest", "ServicePointManager", "SecurityProtocolType", "IWebProxy", "CredentialCache", "NetworkCredential", "ICredentials", "WebHeaderCollection"], "namespace": "System.Net"}, {"type_definitions": ["Aes", "HMACSHA256", "RSACryptoServiceProvider", "SymmetricAlgorithm", "CipherMode", "PaddingMode", "CspParameters", "AsymmetricAlgorithm", "ICryptoTransform", "HashAlgorithm", "RandomNumberGenerator"], "namespace": "System.Security.Cryptography"}, {"type_definitions": ["TextWriter"], "namespace": "System.IO"}, {"type_definitions": ["SslPolicyErrors", "RemoteCertificateValidationCallback"], "namespace": "System.Net.Security"}], "entry_point_token": 100663298, "tables_rows_map": "14160801301005e0900004000101200300001003000004020", "assembly_flags_txt": "COMIMAGE_FLAGS_ILONLY", "streams": {"#~": {"chi2": 54914.5625, "size": 1748, "entropy": 4.972702503204346, "md5": "6a1550650b8c0d2c08bcf5cce3442e70"}, "#Strings": {"chi2": 26965.0859375, "size": 2376, "entropy": 4.946107864379883, "md5": "b7293ea2a6961899c48117499b81b1c6"}, "#US": {"chi2": 116908.1875, "size": 1864, "entropy": 4.135632514953613, "md5": "2de3b28b50fb324e820ec24728d95f3d"}, "#GUID": {"chi2": 240.0, "size": 16, "entropy": 4.0, "md5": "000464b692c1e21994a0ff015eb69c67"}, "#Blob": {"chi2": 10427.369140625, "size": 720, "entropy": 4.760054588317871, "md5": "3427bdb681a4ce5db5bff9e103de9483"}}, "tables_present": 17, "clr_version": "v4.0.30319", "assembly_data": {"majorversion": 0, "minorversion": 0, "hashalgid": 32772, "flags_text": "afPA_None", "buildnumber": 0, "flags": 0, "revisionnumber": 0, "name": "5mqms3q1.zci"}, "clr_meta_version": "1.1", "tables_present_map": "a0909a21557", "resources_va": 0}, "pe_info": {"timestamp": 1655974857, "entry_point": 18634, "machine_type": 332, "imphash": "f34d5f2d4577ed6d9ceec516c1f5a744", "sections": [{"name": ".text", "chi2": 258721.88, "virtual_address": 8192, "entropy": 5.48, "raw_size": 10752, "flags": "rx", "virtual_size": 10448, "md5": "64866293fda4a3e1e1adf1a4bb08bb51"}, {"name": ".reloc", "chi2": 128522.0, "virtual_address": 24576, "entropy": 0.08, "raw_size": 512, "flags": "r", "virtual_size": 12, "md5": "fb053eedbb9ef4f92774393356c8ba0d"}], "import_list": [{"library_name": "mscoree.dll", "imported_functions": ["_CorExeMain"]}]}, "magic": "PE32 executable for MS Windows (GUI) Intel 80386 Mono/.Net assembly", "last_analysis_stats": {"harmless": 0, "type-unsupported": 4, "suspicious": 0, "confirmed-timeout": 0, "timeout": 0, "failure": 0, "malicious": 56, "undetected": 15}, "last_analysis_results": {"Bkav": {"category": "malicious", "engine_name": "Bkav", "engine_version": "1.3.0.9899", "result": "W32.AIDetectNet.01", "method": "blacklist", "engine_update": "20230220"}, "Lionic": {"category": "malicious", "engine_name": "Lionic", "engine_version": "7.5", "result": "Trojan.MSIL.Grunt.4!c", "method": "blacklist", "engine_update": "20230220"}, "Elastic": {"category": "malicious", "engine_name": "Elastic", "engine_version": "4.0.78", "result": "malicious (high confidence)", "method": "blacklist", "engine_update": "20230209"}, "MicroWorld-eScan": {"category": "malicious", "engine_name": "MicroWorld-eScan", "engine_version": "14.0.409.0", "result": "Generic.MSIL.Covenant.Marte.A.80845F04", "method": "blacklist", "engine_update": "20230220"}, "ClamAV": {"category": "malicious", "engine_name": "ClamAV", "engine_version": "1.0.1.0", "result": "Win.Packed.Razy-9770094-0", "method": "blacklist", "engine_update": "20230220"}, "FireEye": {"category": "malicious", "engine_name": "FireEye", "engine_version": "35.24.1.0", "result": "Generic.mg.b7280ebebc3bd412", "method": "blacklist", "engine_update": "20230220"}, "CAT-QuickHeal": {"category": "undetected", "engine_name": "CAT-QuickHeal", "engine_version": "22.00", "result": null, "method": "blacklist", "engine_update": "20230220"}, "McAfee": {"category": "malicious", "engine_name": "McAfee", "engine_version": "6.0.6.653", "result": "RDN/Generic Dropper", "method": "blacklist", "engine_update": "20230220"}, "Cylance": {"category": "malicious", "engine_name": "Cylance", "engine_version": "2.3.1.101", "result": "Unsafe", "method": "blacklist", "engine_update": "20230220"}, "VIPRE": {"category": "malicious", "engine_name": "VIPRE", "engine_version": "6.0.0.35", "result": "Generic.MSIL.Covenant.Marte.A.80845F04", "method": "blacklist", "engine_update": "20230220"}, "Sangfor": {"category": "malicious", "engine_name": "Sangfor", "engine_version": "2.23.0.0", "result": "Suspicious.Win32.Save.a", "method": "blacklist", "engine_update": "20230215"}, "CrowdStrike": {"category": "malicious", "engine_name": "CrowdStrike", "engine_version": "1.0", "result": "win/malicious_confidence_100% (W)", "method": "blacklist", "engine_update": "20220812"}, "BitDefender": {"category": "malicious", "engine_name": "BitDefender", "engine_version": "7.2", "result": "Generic.MSIL.Covenant.Marte.A.80845F04", "method": "blacklist", "engine_update": "20230220"}, "K7GW": {"category": "malicious", "engine_name": "K7GW", "engine_version": "12.69.46992", "result": "Trojan ( 700000121 )", "method": "blacklist", "engine_update": "20230220"}, "K7AntiVirus": {"category": "malicious", "engine_name": "K7AntiVirus", "engine_version": "12.69.46990", "result": "Trojan ( 700000121 )", "method": "blacklist", "engine_update": "20230220"}, "Baidu": {"category": "undetected", "engine_name": "Baidu", "engine_version": "1.0.0.2", "result": null, "method": "blacklist", "engine_update": "20190318"}, "VirIT": {"category": "malicious", "engine_name": "VirIT", "engine_version": "9.5.391", "result": "Trojan.Win32.MSIL_Heur.A", "method": "blacklist", "engine_update": "20230220"}, "Cyren": {"category": "malicious", "engine_name": "Cyren", "engine_version": "6.5.1.2", "result": "W32/MSIL_Agent.BSM.gen!Eldorado", "method": "blacklist", "engine_update": "20230220"}, "SymantecMobileInsight": {"category": "type-unsupported", "engine_name": "SymantecMobileInsight", "engine_version": "2.0", "result": null, "method": "blacklist", "engine_update": "20230119"}, "Symantec": {"category": "malicious", "engine_name": "Symantec", "engine_version": "1.19.0.0", "result": "Downloader", "method": "blacklist", "engine_update": "20230220"}, "tehtris": {"category": "undetected", "engine_name": "tehtris", "engine_version": "v0.1.4", "result": null, "method": "blacklist", "engine_update": "20230220"}, "ESET-NOD32": {"category": "malicious", "engine_name": "ESET-NOD32", "engine_version": "26782", "result": "a variant of MSIL/Agent.TEH", "method": "blacklist", "engine_update": "20230220"}, "Zoner": {"category": "undetected", "engine_name": "Zoner", "engine_version": "2.2.2.0", "result": null, "method": "blacklist", "engine_update": "20230219"}, "APEX": {"category": "malicious", "engine_name": "APEX", "engine_version": "6.389", "result": "Malicious", "method": "blacklist", "engine_update": "20230219"}, "Paloalto": {"category": "malicious", "engine_name": "Paloalto", "engine_version": "0.9.0.1003", "result": "generic.ml", "method": "blacklist", "engine_update": "20230220"}, "Cynet": {"category": "malicious", "engine_name": "Cynet", "engine_version": "4.0.0.27", "result": "Malicious (score: 100)", "method": "blacklist", "engine_update": "20230220"}, "Kaspersky": {"category": "malicious", "engine_name": "Kaspersky", "engine_version": "22.0.1.28", "result": "HEUR:Trojan.MSIL.Grunt.gen", "method": "blacklist", "engine_update": "20230220"}, "Alibaba": {"category": "malicious", "engine_name": "Alibaba", "engine_version": "0.3.0.5", "result": "Trojan:MSIL/Covent.30dee661", "method": "blacklist", "engine_update": "20190527"}, "NANO-Antivirus": {"category": "undetected", "engine_name": "NANO-Antivirus", "engine_version": "1.0.146.25735", "result": null, "method": "blacklist", "engine_update": "20230220"}, "SUPERAntiSpyware": {"category": "undetected", "engine_name": "SUPERAntiSpyware", "engine_version": "5.6.0.1032", "result": null, "method": "blacklist", "engine_update": "20230219"}, "Avast": {"category": "malicious", "engine_name": "Avast", "engine_version": "22.11.7701.0", "result": "Win32:DropperX-gen [Drp]", "method": "blacklist", "engine_update": "20230220"}, "Tencent": {"category": "malicious", "engine_name": "Tencent", "engine_version": "1.0.0.1", "result": "Msil.Trojan.Grunt.Vwhl", "method": "blacklist", "engine_update": "20230220"}, "Trustlook": {"category": "type-unsupported", "engine_name": "Trustlook", "engine_version": "1.0", "result": null, "method": "blacklist", "engine_update": "20230220"}, "TACHYON": {"category": "undetected", "engine_name": "TACHYON", "engine_version": "2023-02-20.02", "result": null, "method": "blacklist", "engine_update": "20230220"}, "Emsisoft": {"category": "malicious", "engine_name": "Emsisoft", "engine_version": "2022.6.0.32461", "result": "Generic.MSIL.Covenant.Marte.A.80845F04 (B)", "method": "blacklist", "engine_update": "20230220"}, "F-Secure": {"category": "undetected", "engine_name": "F-Secure", "engine_version": "18.10.1137.128", "result": null, "method": "blacklist", "engine_update": "20230220"}, "DrWeb": {"category": "malicious", "engine_name": "DrWeb", "engine_version": "7.0.59.12300", "result": "Trojan.DownloaderNET.45", "method": "blacklist", "engine_update": "20230220"}, "Zillya": {"category": "malicious", "engine_name": "Zillya", "engine_version": "2.0.0.4817", "result": "Trojan.Agent.Win32.1982330", "method": "blacklist", "engine_update": "20230220"}, "TrendMicro": {"category": "malicious", "engine_name": "TrendMicro", "engine_version": "11.0.0.1006", "result": "TROJ_GEN.R03BC0DGO22", "method": "blacklist", "engine_update": "20230220"}, "McAfee-GW-Edition": {"category": "malicious", "engine_name": "McAfee-GW-Edition", "engine_version": "v2021.2.0+4045", "result": "BehavesLike.Win32.Generic.lm", "method": "blacklist", "engine_update": "20230220"}, "Trapmine": {"category": "malicious", "engine_name": "Trapmine", "engine_version": "4.0.10.141", "result": "suspicious.low.ml.score", "method": "blacklist", "engine_update": "20230103"}, "CMC": {"category": "undetected", "engine_name": "CMC", "engine_version": "2.4.2022.1", "result": null, "method": "blacklist", "engine_update": "20230220"}, "Sophos": {"category": "malicious", "engine_name": "Sophos", "engine_version": "2.1.2.0", "result": "ATK/Covent-A", "method": "blacklist", "engine_update": "20230220"}, "Ikarus": {"category": "malicious", "engine_name": "Ikarus", "engine_version": "6.0.33.0", "result": "Trojan.MSIL.Agent", "method": "blacklist", "engine_update": "20230220"}, "GData": {"category": "malicious", "engine_name": "GData", "engine_version": "A:25.35303B:27.30703", "result": "Generic.MSIL.Covenant.Marte.A.80845F04", "method": "blacklist", "engine_update": "20230220"}, "Jiangmin": {"category": "undetected", "engine_name": "Jiangmin", "engine_version": "16.0.100", "result": null, "method": "blacklist", "engine_update": "20230220"}, "Webroot": {"category": "malicious", "engine_name": "Webroot", "engine_version": "1.0.0.403", "result": "W32.Trojan.MSILZilla", "method": "blacklist", "engine_update": "20230220"}, "Avira": {"category": "malicious", "engine_name": "Avira", "engine_version": "8.3.3.16", "result": "HEUR/AGEN.1232007", "method": "blacklist", "engine_update": "20230220"}, "Antiy-AVL": {"category": "malicious", "engine_name": "Antiy-AVL", "engine_version": "3.0", "result": "Trojan/MSIL.Grunt", "method": "blacklist", "engine_update": "20230220"}, "Kingsoft": {"category": "malicious", "engine_name": "Kingsoft", "engine_version": "2017.9.26.565", "result": "Win32.Troj.Undef.(kcloud)", "method": "blacklist", "engine_update": "20230220"}, "Gridinsoft": {"category": "undetected", "engine_name": "Gridinsoft", "engine_version": "1.0.109.174", "result": null, "method": "blacklist", "engine_update": "20230220"}, "Xcitium": {"category": "undetected", "engine_name": "Xcitium", "engine_version": "35427", "result": null, "method": "blacklist", "engine_update": "20230219"}, "Arcabit": {"category": "malicious", "engine_name": "Arcabit", "engine_version": "2022.0.0.18", "result": "Generic.MSIL.Covenant.Marte.A.80845F04", "method": "blacklist", "engine_update": "20230220"}, "ViRobot": {"category": "undetected", "engine_name": "ViRobot", "engine_version": "2014.3.20.0", "result": null, "method": "blacklist", "engine_update": "20230220"}, "ZoneAlarm": {"category": "malicious", "engine_name": "ZoneAlarm", "engine_version": "1.0", "result": "HEUR:Trojan.MSIL.Grunt.gen", "method": "blacklist", "engine_update": "20230220"}, "Avast-Mobile": {"category": "type-unsupported", "engine_name": "Avast-Mobile", "engine_version": "230220-00", "result": null, "method": "blacklist", "engine_update": "20230220"}, "Microsoft": {"category": "malicious", "engine_name": "Microsoft", "engine_version": "1.1.20000.2", "result": "VirTool:MSIL/Covent.A", "method": "blacklist", "engine_update": "20230220"}, "Google": {"category": "malicious", "engine_name": "Google", "engine_version": "1676926886", "result": "Detected", "method": "blacklist", "engine_update": "20230220"}, "BitDefenderFalx": {"category": "type-unsupported", "engine_name": "BitDefenderFalx", "engine_version": "2.0.936", "result": null, "method": "blacklist", "engine_update": "20230203"}, "AhnLab-V3": {"category": "malicious", "engine_name": "AhnLab-V3", "engine_version": "3.23.1.10344", "result": "Malware/Win32.RL_Generic.C4323293", "method": "blacklist", "engine_update": "20230220"}, "Acronis": {"category": "malicious", "engine_name": "Acronis", "engine_version": "1.2.0.114", "result": "suspicious", "method": "blacklist", "engine_update": "20230219"}, "VBA32": {"category": "malicious", "engine_name": "VBA32", "engine_version": "5.0.0", "result": "Trojan.MSIL.GruntStager.Heur", "method": "blacklist", "engine_update": "20230220"}, "ALYac": {"category": "malicious", "engine_name": "ALYac", "engine_version": "1.1.3.1", "result": "Generic.MSIL.Covenant.Marte.A.80845F04", "method": "blacklist", "engine_update": "20230220"}, "MAX": {"category": "malicious", "engine_name": "MAX", "engine_version": "2023.1.4.1", "result": "malware (ai score=100)", "method": "blacklist", "engine_update": "20230220"}, "Malwarebytes": {"category": "undetected", "engine_name": "Malwarebytes", "engine_version": "4.4.4.52", "result": null, "method": "blacklist", "engine_update": "20230220"}, "TrendMicro-HouseCall": {"category": "malicious", "engine_name": "TrendMicro-HouseCall", "engine_version": "10.0.0.1040", "result": "TROJ_GEN.R03BC0DGO22", "method": "blacklist", "engine_update": "20230220"}, "Rising": {"category": "malicious", "engine_name": "Rising", "engine_version": "25.0.0.27", "result": "Trojan.GruntStager!1.C264 (CLASSIC)", "method": "blacklist", "engine_update": "20230220"}, "Yandex": {"category": "undetected", "engine_name": "Yandex", "engine_version": "5.5.2.24", "result": null, "method": "blacklist", "engine_update": "20230220"}, "SentinelOne": {"category": "malicious", "engine_name": "SentinelOne", "engine_version": "23.1.3.2", "result": "Static AI - Malicious PE", "method": "blacklist", "engine_update": "20230216"}, "MaxSecure": {"category": "malicious", "engine_name": "MaxSecure", "engine_version": "1.0.0.1", "result": "Trojan.Malware.74708093.susgen", "method": "blacklist", "engine_update": "20230217"}, "Fortinet": {"category": "malicious", "engine_name": "Fortinet", "engine_version": "6.4.258.0", "result": "MSIL/Agent.TEH!tr", "method": "blacklist", "engine_update": "20230220"}, "BitDefenderTheta": {"category": "malicious", "engine_name": "BitDefenderTheta", "engine_version": "7.2.37796.0", "result": "Gen:NN.ZemsilF.36276.aiW@aWy0WFm", "method": "blacklist", "engine_update": "20230208"}, "AVG": {"category": "malicious", "engine_name": "AVG", "engine_version": "22.11.7701.0", "result": "Win32:DropperX-gen [Drp]", "method": "blacklist", "engine_update": "20230220"}, "Cybereason": {"category": "malicious", "engine_name": "Cybereason", "engine_version": "1.2.449", "result": "malicious.f53db4", "method": "blacklist", "engine_update": "20210330"}, "Panda": {"category": "malicious", "engine_name": "Panda", "engine_version": "4.6.4.2", "result": "Trj/GdSda.A", "method": "blacklist", "engine_update": "20230220"}}, "reputation": 0, "sigma_analysis_stats": {"high": 0, "medium": 1, "critical": 0, "low": 2}}, "type": "file", "id": "2e797717d21635a162653dbd6cabfcf52bd771c9fa14f93b38d088bc82df83ec", "links": {"self": "https://www.virustotal.com/api/v3/files/2e797717d21635a162653dbd6cabfcf52bd771c9fa14f93b38d088bc82df83ec"}}}